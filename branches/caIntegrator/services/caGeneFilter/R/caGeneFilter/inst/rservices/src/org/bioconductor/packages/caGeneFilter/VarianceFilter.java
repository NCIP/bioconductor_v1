package org.bioconductor.packages.caGeneFilter;

	/**
	* This file was auto-generated by R function 
	* createJavaBean Mon Mar 30 14:04:02 2009. 
	* It represents the S4 Class VarianceFilter in R package caGeneFilter. 
	*/


public class VarianceFilter extends Filter implements java.io.Serializable  {
	private double[] minimumVariance;

	public VarianceFilter() {
		this.minimumVariance = new double[]{};
	}

	public VarianceFilter(
		double[] minimumVariance){

		this.minimumVariance = minimumVariance;
	}

	/**
	* Sets the minimumVariance value for this VarianceFilter
	*
	* @param	minimumVariance	
	*/
	public void setMinimumVariance(double[] minimumVariance) {
		this.minimumVariance = minimumVariance;
	}

	/**
	* Gets the minimumVariance value for this VarianceFilter
	*
	* @return	the value of minimumVariance
	*	
	*/
	public double[] getMinimumVariance() {
		return minimumVariance;
	}

	/**
	* Print this VarianceFilter to String
	*
	* @return	contents of VarianceFilter as a String
	*/
	public String toString() {
		StringBuffer res=new StringBuffer("{");
		res.append("minimumVariance=" + java.util.Arrays.toString( minimumVariance ));
		res.append("}");
		return res.toString();
	}

	/**
	* Compare this VarianceFilter with the input data.
	*
	* @param inputObject	the data to be compared with.
	* @return	true if the two have the same contents, false otherwise.
	*/
	public boolean equals(Object inputObject) {
		boolean res = getClass().equals(inputObject.getClass());
		if(res){
			VarianceFilter obj = (VarianceFilter)inputObject;
			Object inputMinimumVariance = obj.getMinimumVariance();
			if((minimumVariance==null)||(inputMinimumVariance==null))
				res = res&&(minimumVariance==inputMinimumVariance);
			else
				res = res&&java.util.Arrays.equals(minimumVariance, (double[])inputMinimumVariance);
		}
		return res;
	}

}
