package org.bioconductor.packages.caGeneFilter.service.globus;

import org.bioconductor.packages.caGeneFilter.service.CaGeneFilterServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the CaGeneFilterServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class CaGeneFilterServiceProviderImpl{
	
	CaGeneFilterServiceImpl impl;
	
	public CaGeneFilterServiceProviderImpl() throws RemoteException {
		impl = new CaGeneFilterServiceImpl();
	}
	

    public org.bioconductor.packages.caGeneFilter.stubs.RecodeResponse recode(org.bioconductor.packages.caGeneFilter.stubs.RecodeRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.RecodeResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.RecodeResponse();
    boxedResult.setSingleChannelExpressionDataCollection(impl.recode(params.getDataCollection().getSingleChannelExpressionDataCollection(),params.getRecode().getRecode()));
    return boxedResult;
  }

    public org.bioconductor.packages.caGeneFilter.stubs.FilterResponse filter(org.bioconductor.packages.caGeneFilter.stubs.FilterRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.FilterResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.FilterResponse();
    boxedResult.setSingleChannelExpressionDataCollection(impl.filter(params.getSingleChannelExpressionDataCollection().getSingleChannelExpressionDataCollection(),params.getFilter().getFilter()));
    return boxedResult;
  }

    public org.bioconductor.packages.caGeneFilter.stubs.InvokeSpotQualityRecodeResponse invokeSpotQualityRecode(org.bioconductor.packages.caGeneFilter.stubs.InvokeSpotQualityRecodeRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.InvokeSpotQualityRecodeResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.InvokeSpotQualityRecodeResponse();
    impl.invokeSpotQualityRecode(params.getSessionIdentifier().getSessionIdentifier(),params.getSpotQualityRecode().getSpotQualityRecode());
    return boxedResult;
  }

    public org.bioconductor.packages.caGeneFilter.stubs.GetRpackageSessionInfoResponse getRpackageSessionInfo(org.bioconductor.packages.caGeneFilter.stubs.GetRpackageSessionInfoRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.GetRpackageSessionInfoResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.GetRpackageSessionInfoResponse();
    boxedResult.setResponse(impl.getRpackageSessionInfo());
    return boxedResult;
  }

    public org.bioconductor.packages.caGeneFilter.stubs.InvokeFilterResponse invokeFilter(org.bioconductor.packages.caGeneFilter.stubs.InvokeFilterRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.InvokeFilterResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.InvokeFilterResponse();
    impl.invokeFilter(params.getSessionIdentifier().getSessionIdentifier(),params.getFilter().getFilter());
    return boxedResult;
  }

    public org.bioconductor.packages.caGeneFilter.stubs.InvokeRecodeResponse invokeRecode(org.bioconductor.packages.caGeneFilter.stubs.InvokeRecodeRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.InvokeRecodeResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.InvokeRecodeResponse();
    impl.invokeRecode(params.getSessionIdentifier().getSessionIdentifier(),params.getRecode().getRecode());
    return boxedResult;
  }

    public org.bioconductor.packages.caGeneFilter.stubs.CreateCaGeneFilterSessionResponse createCaGeneFilterSession(org.bioconductor.packages.caGeneFilter.stubs.CreateCaGeneFilterSessionRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.CreateCaGeneFilterSessionResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.CreateCaGeneFilterSessionResponse();
    boxedResult.setSessionIdentifier(impl.createCaGeneFilterSession());
    return boxedResult;
  }

    public org.bioconductor.packages.caGeneFilter.stubs.GetStatusResponse getStatus(org.bioconductor.packages.caGeneFilter.stubs.GetStatusRequest params) throws RemoteException {
    org.bioconductor.packages.caGeneFilter.stubs.GetStatusResponse boxedResult = new org.bioconductor.packages.caGeneFilter.stubs.GetStatusResponse();
    boxedResult.setStatus(impl.getStatus(params.getSessionIdentifier().getSessionIdentifier()));
    return boxedResult;
  }

}
