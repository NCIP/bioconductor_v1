package org.bioconductor.packages.caLinearModel.service.globus;

import org.bioconductor.packages.caLinearModel.service.CaLinearModelImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the CaLinearModelImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class CaLinearModelProviderImpl{
	
	CaLinearModelImpl impl;
	
	public CaLinearModelProviderImpl() throws RemoteException {
		impl = new CaLinearModelImpl();
	}
	

    public org.bioconductor.packages.caLinearModel.stubs.FitResponse fit(org.bioconductor.packages.caLinearModel.stubs.FitRequest params) throws RemoteException {
    org.bioconductor.packages.caLinearModel.stubs.FitResponse boxedResult = new org.bioconductor.packages.caLinearModel.stubs.FitResponse();
    boxedResult.setTopTableCollection(impl.fit(params.getSingleChannelExpressionDataCollection().getSingleChannelExpressionDataCollection(),params.getOneChannelModel().getOneChannelModel()));
    return boxedResult;
  }

    public org.bioconductor.packages.caLinearModel.stubs.TwoChannelFitResponse twoChannelFit(org.bioconductor.packages.caLinearModel.stubs.TwoChannelFitRequest params) throws RemoteException {
    org.bioconductor.packages.caLinearModel.stubs.TwoChannelFitResponse boxedResult = new org.bioconductor.packages.caLinearModel.stubs.TwoChannelFitResponse();
    boxedResult.setTopTableCollection(impl.twoChannelFit(params.getTwoChannelExpressionDataCollection().getTwoChannelExpressionDataCollection(),params.getTwoChannelModel().getTwoChannelModel()));
    return boxedResult;
  }

    public org.bioconductor.packages.caLinearModel.stubs.GetRpackageSessionInfoResponse getRpackageSessionInfo(org.bioconductor.packages.caLinearModel.stubs.GetRpackageSessionInfoRequest params) throws RemoteException {
    org.bioconductor.packages.caLinearModel.stubs.GetRpackageSessionInfoResponse boxedResult = new org.bioconductor.packages.caLinearModel.stubs.GetRpackageSessionInfoResponse();
    boxedResult.setResponse(impl.getRpackageSessionInfo());
    return boxedResult;
  }

    public org.bioconductor.packages.caLinearModel.stubs.CreateCaLinearModelSessionResponse createCaLinearModelSession(org.bioconductor.packages.caLinearModel.stubs.CreateCaLinearModelSessionRequest params) throws RemoteException {
    org.bioconductor.packages.caLinearModel.stubs.CreateCaLinearModelSessionResponse boxedResult = new org.bioconductor.packages.caLinearModel.stubs.CreateCaLinearModelSessionResponse();
    boxedResult.setSessionIdentifier(impl.createCaLinearModelSession());
    return boxedResult;
  }

    public org.bioconductor.packages.caLinearModel.stubs.InvokeFitResponse invokeFit(org.bioconductor.packages.caLinearModel.stubs.InvokeFitRequest params) throws RemoteException {
    org.bioconductor.packages.caLinearModel.stubs.InvokeFitResponse boxedResult = new org.bioconductor.packages.caLinearModel.stubs.InvokeFitResponse();
    impl.invokeFit(params.getSessionIdentifier().getSessionIdentifier(),params.getOneChannelModel().getOneChannelModel());
    return boxedResult;
  }

    public org.bioconductor.packages.caLinearModel.stubs.InvokeTwoChannelFitResponse invokeTwoChannelFit(org.bioconductor.packages.caLinearModel.stubs.InvokeTwoChannelFitRequest params) throws RemoteException {
    org.bioconductor.packages.caLinearModel.stubs.InvokeTwoChannelFitResponse boxedResult = new org.bioconductor.packages.caLinearModel.stubs.InvokeTwoChannelFitResponse();
    impl.invokeTwoChannelFit(params.getSessionIdentifier().getSessionIdentifier(),params.getTwoChannelModel().getTwoChannelModel());
    return boxedResult;
  }

    public org.bioconductor.packages.caLinearModel.stubs.GetStatusResponse getStatus(org.bioconductor.packages.caLinearModel.stubs.GetStatusRequest params) throws RemoteException {
    org.bioconductor.packages.caLinearModel.stubs.GetStatusResponse boxedResult = new org.bioconductor.packages.caLinearModel.stubs.GetStatusResponse();
    boxedResult.setStatus(impl.getStatus(params.getSessionIdentifier().getSessionIdentifier()));
    return boxedResult;
  }

}
