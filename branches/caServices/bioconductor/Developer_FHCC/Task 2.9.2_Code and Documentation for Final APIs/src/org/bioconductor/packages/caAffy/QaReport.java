package org.bioconductor.packages.caAffy;

	/**
	* This file was auto-generated by R function 
	* createJavaBean Wed Feb 28 20:35:39 2007. 
	* It represents the S4 Class QaReport in R package caAffy. 
	*	This class encapsulates returned by
	*	affyQAReport as invoked by object caQAReport in R
	*	package caAffy.
	*/


public class QaReport implements java.io.Serializable  {
	private byte[] pdfFile;

	public QaReport() {
		this.pdfFile = new byte[]{};
	}

	public QaReport(
		byte[] pdfFile){

		this.pdfFile = pdfFile;
	}

	/**
	* Sets the pdfFile value for this QaReport
	*
	* @param	pdfFile	Object of class "raw", representing the
	*	PDF file created by affyQAReport as a raw
	*	(binary) vector.}
	*/
	public void setPdfFile(byte[] pdfFile) {
		this.pdfFile = pdfFile;
	}

	/**
	* Gets the pdfFile value for this QaReport
	*
	* @return	the value of pdfFile
	*	Object of class "raw", representing the
	*	PDF file created by affyQAReport as a raw
	*	(binary) vector.}
	*/
	public byte[] getPdfFile() {
		return pdfFile;
	}

	/**
	* Print this QaReport to String
	*
	* @return	contents of QaReport as a String
	*/
	public String toString() {
		StringBuffer res=new StringBuffer("{");
		res.append("pdfFile=" + java.util.Arrays.toString( pdfFile ));
		res.append("}");
		return res.toString();
	}

	/**
	* Compare this QaReport with the input data.
	*
	* @param inputObject	the data to be compared with.
	* @return	true if the two have the same contents, false otherwise.
	*/
	public boolean equals(Object inputObject) {
		boolean res = getClass().equals(inputObject.getClass());
		if(res){
			QaReport obj = (QaReport)inputObject;
			Object inputPdfFile = obj.getPdfFile();
			if((pdfFile==null)||(inputPdfFile==null))
				res = res&&(pdfFile==inputPdfFile);
			else
				res = res&&java.util.Arrays.equals(pdfFile, (byte[])inputPdfFile);
		}
		return res;
	}

}
