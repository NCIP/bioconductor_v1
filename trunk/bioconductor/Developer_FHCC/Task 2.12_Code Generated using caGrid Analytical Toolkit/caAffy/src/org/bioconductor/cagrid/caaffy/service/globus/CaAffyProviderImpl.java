package org.bioconductor.cagrid.caaffy.service.globus;

import org.bioconductor.cagrid.caaffy.service.CaAffyImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the CaAffyImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.0
 * 
 */
public class CaAffyProviderImpl{
	
	CaAffyImpl impl;
	
	public CaAffyProviderImpl() throws RemoteException {
		impl = new CaAffyImpl();
	}
	

	public org.bioconductor.cagrid.caaffy.stubs.CaExpressoResponse caExpresso(org.bioconductor.cagrid.caaffy.stubs.CaExpressoRequest params) throws RemoteException {
		CaAffyAuthorization.authorizeCaExpresso();
		org.bioconductor.cagrid.caaffy.stubs.CaExpressoResponse boxedResult = new org.bioconductor.cagrid.caaffy.stubs.CaExpressoResponse();
		boxedResult.setDerivedBioAssays(impl.caExpresso(params.getMeasuredBioAssays().getMeasuredBioAssays(),params.getExpressoParameter().getExpressoParameter()));
		return boxedResult;
	}

	public org.bioconductor.cagrid.caaffy.stubs.CaQAReportResponse caQAReport(org.bioconductor.cagrid.caaffy.stubs.CaQAReportRequest params) throws RemoteException {
		CaAffyAuthorization.authorizeCaQAReport();
		org.bioconductor.cagrid.caaffy.stubs.CaQAReportResponse boxedResult = new org.bioconductor.cagrid.caaffy.stubs.CaQAReportResponse();
		boxedResult.setQaReport(impl.caQAReport(params.getMeasuredBioAssays().getMeasuredBioAssays()));
		return boxedResult;
	}

}
