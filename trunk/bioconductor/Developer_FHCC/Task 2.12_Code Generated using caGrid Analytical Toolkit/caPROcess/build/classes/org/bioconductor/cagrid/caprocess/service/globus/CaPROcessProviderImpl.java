package org.bioconductor.cagrid.caprocess.service.globus;

import org.bioconductor.cagrid.caprocess.service.CaPROcessImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the CaPROcessImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.0
 * 
 */
public class CaPROcessProviderImpl{
	
	CaPROcessImpl impl;
	
	public CaPROcessProviderImpl() throws RemoteException {
		impl = new CaPROcessImpl();
	}
	

	public org.bioconductor.cagrid.caprocess.stubs.CaPROcessResponse caPROcess(org.bioconductor.cagrid.caprocess.stubs.CaPROcessRequest params) throws RemoteException {
		CaPROcessAuthorization.authorizeCaPROcess();
		org.bioconductor.cagrid.caprocess.stubs.CaPROcessResponse boxedResult = new org.bioconductor.cagrid.caprocess.stubs.CaPROcessResponse();
		boxedResult.setPeakLocation(impl.caPROcess(params.getMzAssays().getMzAssays(),params.getProcessParameter().getPROcessParameter()));
		return boxedResult;
	}

}
