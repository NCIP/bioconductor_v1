package org.bioconductor.packages.caGeneFilter;

	/**
	* This file was auto-generated by R function 
	* createJavaBean Mon Mar 30 14:04:02 2009. 
	* It represents the S4 Class KOverAFilter in R package caGeneFilter. 
	*/


public class KOverAFilter extends Filter implements java.io.Serializable  {
	private double[] minimumValue;
	private int[] minimumElementNumber;

	public KOverAFilter() {
		this.minimumValue = new double[]{};
		this.minimumElementNumber = new int[]{};
	}

	public KOverAFilter(
		double[] minimumValue,
		int[] minimumElementNumber){

		this.minimumValue = minimumValue;
		this.minimumElementNumber = minimumElementNumber;
	}

	/**
	* Sets the minimumValue value for this KOverAFilter
	*
	* @param	minimumValue	
	*/
	public void setMinimumValue(double[] minimumValue) {
		this.minimumValue = minimumValue;
	}

	/**
	* Gets the minimumValue value for this KOverAFilter
	*
	* @return	the value of minimumValue
	*	
	*/
	public double[] getMinimumValue() {
		return minimumValue;
	}

	/**
	* Sets the minimumElementNumber value for this KOverAFilter
	*
	* @param	minimumElementNumber	
	*/
	public void setMinimumElementNumber(int[] minimumElementNumber) {
		this.minimumElementNumber = minimumElementNumber;
	}

	/**
	* Gets the minimumElementNumber value for this KOverAFilter
	*
	* @return	the value of minimumElementNumber
	*	
	*/
	public int[] getMinimumElementNumber() {
		return minimumElementNumber;
	}

	/**
	* Print this KOverAFilter to String
	*
	* @return	contents of KOverAFilter as a String
	*/
	public String toString() {
		StringBuffer res=new StringBuffer("{");
		res.append("minimumValue=" + java.util.Arrays.toString( minimumValue ));
		res.append(", ");
		res.append("minimumElementNumber=" + java.util.Arrays.toString( minimumElementNumber ));
		res.append("}");
		return res.toString();
	}

	/**
	* Compare this KOverAFilter with the input data.
	*
	* @param inputObject	the data to be compared with.
	* @return	true if the two have the same contents, false otherwise.
	*/
	public boolean equals(Object inputObject) {
		boolean res = getClass().equals(inputObject.getClass());
		if(res){
			KOverAFilter obj = (KOverAFilter)inputObject;
			Object inputMinimumValue = obj.getMinimumValue();
			if((minimumValue==null)||(inputMinimumValue==null))
				res = res&&(minimumValue==inputMinimumValue);
			else
				res = res&&java.util.Arrays.equals(minimumValue, (double[])inputMinimumValue);
			Object inputMinimumElementNumber = obj.getMinimumElementNumber();
			if((minimumElementNumber==null)||(inputMinimumElementNumber==null))
				res = res&&(minimumElementNumber==inputMinimumElementNumber);
			else
				res = res&&java.util.Arrays.equals(minimumElementNumber, (int[])inputMinimumElementNumber);
		}
		return res;
	}

}
