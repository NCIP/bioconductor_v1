package org.bioconductor.packages.caGeneFilter;

	/**
	* This file was auto-generated by R function 
	* createJavaBean Mon Mar 30 14:04:02 2009. 
	* It represents the S4 Class MaximumThresholdRecode in R package caGeneFilter. 
	*/


public class MaximumThresholdRecode extends Recode implements java.io.Serializable  {
	private double[] maximumThreshold;
	private double[] recodeValue;

	public MaximumThresholdRecode() {
		this.maximumThreshold = new double[]{};
		this.recodeValue = new double[]{};
	}

	public MaximumThresholdRecode(
		double[] maximumThreshold,
		double[] recodeValue){

		this.maximumThreshold = maximumThreshold;
		this.recodeValue = recodeValue;
	}

	/**
	* Sets the maximumThreshold value for this MaximumThresholdRecode
	*
	* @param	maximumThreshold	
	*/
	public void setMaximumThreshold(double[] maximumThreshold) {
		this.maximumThreshold = maximumThreshold;
	}

	/**
	* Gets the maximumThreshold value for this MaximumThresholdRecode
	*
	* @return	the value of maximumThreshold
	*	
	*/
	public double[] getMaximumThreshold() {
		return maximumThreshold;
	}

	/**
	* Sets the recodeValue value for this MaximumThresholdRecode
	*
	* @param	recodeValue	
	*/
	public void setRecodeValue(double[] recodeValue) {
		this.recodeValue = recodeValue;
	}

	/**
	* Gets the recodeValue value for this MaximumThresholdRecode
	*
	* @return	the value of recodeValue
	*	
	*/
	public double[] getRecodeValue() {
		return recodeValue;
	}

	/**
	* Print this MaximumThresholdRecode to String
	*
	* @return	contents of MaximumThresholdRecode as a String
	*/
	public String toString() {
		StringBuffer res=new StringBuffer("{");
		res.append("maximumThreshold=" + java.util.Arrays.toString( maximumThreshold ));
		res.append(", ");
		res.append("recodeValue=" + java.util.Arrays.toString( recodeValue ));
		res.append("}");
		return res.toString();
	}

	/**
	* Compare this MaximumThresholdRecode with the input data.
	*
	* @param inputObject	the data to be compared with.
	* @return	true if the two have the same contents, false otherwise.
	*/
	public boolean equals(Object inputObject) {
		boolean res = getClass().equals(inputObject.getClass());
		if(res){
			MaximumThresholdRecode obj = (MaximumThresholdRecode)inputObject;
			Object inputMaximumThreshold = obj.getMaximumThreshold();
			if((maximumThreshold==null)||(inputMaximumThreshold==null))
				res = res&&(maximumThreshold==inputMaximumThreshold);
			else
				res = res&&java.util.Arrays.equals(maximumThreshold, (double[])inputMaximumThreshold);
			Object inputRecodeValue = obj.getRecodeValue();
			if((recodeValue==null)||(inputRecodeValue==null))
				res = res&&(recodeValue==inputRecodeValue);
			else
				res = res&&java.util.Arrays.equals(recodeValue, (double[])inputRecodeValue);
		}
		return res;
	}

}
