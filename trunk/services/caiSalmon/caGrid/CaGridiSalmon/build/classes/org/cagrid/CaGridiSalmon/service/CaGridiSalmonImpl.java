package org.cagrid.CaGridiSalmon.service;

import java.rmi.RemoteException;

/** 
 * TODO:I am the service side implementation class.  IMPLEMENT AND DOCUMENT ME
 * 
 * @created by Introduce Toolkit version 1.3
 * 
 */
public class CaGridiSalmonImpl extends CaGridiSalmonImplBase {

	
	public CaGridiSalmonImpl() throws RemoteException {
		super();
	}
	
    public org.bioconductor.cagrid.caisalmon.MicroRNATopTable camiRNATwoGroupDifferentialExpression(org.bioconductor.cagrid.caisalmon.Targets targets) throws RemoteException {
      //TODO: Implement this autogenerated method

      //summon the webService that is to be internal to this
      System.out.println("Creating miRNATwoGroupDifferentialExpression - myCaService"); // logs/catalina.out
      org.bioconductor.rserviceJms.services.iSalmon.iSalmon myCaService;
      try {			
	  myCaService = new org.bioconductor.rserviceJms.services.iSalmon.iSalmon();
      }
      catch (Exception ex) {
	  throw new RemoteException(ex.getMessage());
      }
      System.out.println("myCaService is created");


      //1st convert caGrid targets to a targets that the Rwebservices iSalmon implementation understands
      // so make an Rwebservices targets
      // and populate it with the stuff from caGrid targets
      // 1st we will need to get the stuff from caGrid targets
      //      int TargLen = targets.getFileName.length();
      //      String[] FileNames = new String[TargLen];  //defined from RWebServices version
      //      String[] Conditions = new String[TargLen];
      //      for (int i=0; i < TargLen; i++){
      //	  FileNames[i] = targets.getFileName()[i];
      //	  Conditions[i] = targets.getCondition()[i];
      //      }
      String[] FileNames = targets.getFileName();
      String[] Conditions = targets.getCondition();
      // Then make a new rTargets obj
      org.bioconductor.packages.iSalmon.Targets rTargets = new 
	  org.bioconductor.packages.iSalmon.Targets(FileNames,
						    Conditions);


      //2nd call RWebServices version of miRNATwoGroupDifferentialExpression()
      org.bioconductor.packages.iSalmon.MicroRNATopTable rTable = null;
      try {
	  rTable = myCaService.camiRNATwoGroupDifferentialExpression(rTargets);
      } catch  (RemoteException ex) {
	  throw(ex);
      }

      //3rd convert the output of the RWebServices method to a CaGrid version of MicroRNATopTable 
      org.bioconductor.cagrid.caisalmon.MicroRNATopTable caTable = null;
      if (null != rTable) {
	  caTable = new org.bioconductor.cagrid.caisalmon.MicroRNATopTable(rTable.getPValue(),
									   rTable.getTStatistic(), 
									   rTable.getAdjustedPValue(),
									   rTable.getGeneName(),
									   rTable.getLogFoldChange(),
									   rTable.getLogOdds(),
									   rTable.getProbeName() );	  
      }
      return caTable;      
  }
}

